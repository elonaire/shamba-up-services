type AuthDetails {
	url: String
	token: String
}



enum Gender {
	MALE
	FEMALE
}



type Mutation {
	signUp(user: UserInput!): [User!]!
	createUserRole(role: RoleInput!): [SystemRole!]!
	signIn(rawUserDetails: UserLoginsInput!): AuthDetails!
}

enum OauthClientName {
	GOOGLE
	GITHUB
}

type Query {
	getUsers: [User!]!
}

input RoleInput {
	roleName: RoleName!
}

enum RoleName {
	USER
	ADMIN
	GUEST
}


type SystemRole {
	roleName: RoleName!
}

type User {
	userName: String!
	firstName: String!
	middleName: String
	lastName: String!
	gender: Gender!
	dob: String!
	email: String!
	country: String!
	phone: String!
	password: String!
	createdAt: String
	updatedAt: String
	oauthClient: OauthClientName
	id: String!
	fullName: String!
	age: Int!
	roles: [String!]!
}

input UserInput {
	userName: String!
	firstName: String!
	middleName: String
	lastName: String!
	gender: Gender!
	dob: String!
	email: String!
	country: String!
	phone: String!
	password: String!
	createdAt: String
	updatedAt: String
	oauthClient: OauthClientName
}

input UserLoginsInput {
	userName: String
	password: String
	oauthClient: OauthClientName
}

schema {
	query: Query
	mutation: Mutation
}
